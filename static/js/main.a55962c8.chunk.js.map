{"version":3,"sources":["components/MainNavbar.js","pages/HomePage.js","pages/LoginPage.js","pages/SignUp.js","components/StockCard.js","pages/PortFolio.js","components/RealEstateCard.js","pages/RealEstate.js","pages/Communication.js","pages/ThankYouPage.js","App.js","serviceWorker.js","index.js"],"names":["MainNavbar","props","state","redirectToHome","logout","bind","this","handleLogout","window","location","hash","setState","activeUser","to","signupLink","Nav","Link","href","loginLink","logoutLink","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","React","Component","HomePage","Jumbotron","Container","Image","style","backgroundSize","src","Button","variant","LoginPage","invalidLogin","successLogin","emailInput","createRef","pwdInput","login","users","newActiveUser","i","length","email","current","value","pwd","handleLogin","Alert","show","Form","Group","controlId","Label","Control","ref","type","placeholder","Text","block","SignUp","position","top","left","color","action","Row","as","Col","required","Check","label","StockCard","stock","console","log","Card","width","height","Img","img","Body","Title","name","desc","quote","numberOfStocks","PortFolio","showModal","newStockImg","file","URL","chartData","labels","datasets","data","getChartData","backgroundColor","hoverBackgroundColor","openModal","closeModal","createStock","imgChange","nameInput","descInput","quoteInput","numberOfStocksInput","riskValueInput","imgInput","high","medium","low","stocks","forEach","riskValue","prevProps","prevState","ev","target","files","createObjectURL","newStock","parseInt","addStock","stocksCards","map","key","lg","md","fname","Modal","onHide","size","Header","closeButton","column","sm","fontColor","accept","onChange","fluid","Footer","RealEstateCard","property","RealEstate","newPropertyImg","createProperty","numberOfPropertiesInput","newProperty","numberOfProperties","addProperty","properties","realEstateCards","Communication","ThankYouPage","App","allUsers","jsonUsers","allStocks","jsonStocks","allProperties","jsonProperties","activeUserStocks","filter","userId","concat","exact","path","Boolean","hostname","match","emailjs","init","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a55962c8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass MainNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirectToHome: false\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        this.props.handleLogout();\r\n\r\n        if (window.location.hash !== \"#/\") {\r\n            this.setState({ redirectToHome: true })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { activeUser } = this.props;\r\n        const { redirectToHome } = this.state;\r\n\r\n        if (redirectToHome) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\r\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\r\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}>Logout</Nav.Link> : null;\r\n\r\n\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#/\">Homepage</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/portfolio\">Portfolio</Nav.Link>\r\n                        <Nav.Link href=\"#/realestate\">Real Estate</Nav.Link>\r\n                        <Nav.Link href=\"#/communication\">Contact Us</Nav.Link>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {signupLink}\r\n                        {loginLink}\r\n                        {logoutLink}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainNavbar;","import React from 'react'\r\nimport { Jumbotron, Button, Container, Image } from 'react-bootstrap';\r\nimport MainNavbar from '../components/MainNavbar';\r\n// import logo from '../components/logo.svg';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        var background = { backgroundSize: 'auto' };\r\n        const { activeUser, handleLogout } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <MainNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <h2 className=\"display-3\">Get your money working </h2>\r\n                        <Image\r\n                            style={background} className=\"img-fluid\"\r\n                            src=\"http://www.annettapowell.com/wp-content/uploads/2018/08/20160707-RealStateJump.gif\">\r\n                        </Image>\r\n                        <h4>The place to manage your money, Lets login in! </h4>\r\n                        <p>\r\n                            <Button variant=\"primary\" href=\"#/login\">Login </Button>\r\n\r\n                            <Button variant=\"primary\" href=\"#/Signup\">SignUp</Button>\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport { Jumbotron, Button, Container, Form, Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport './Communication.css';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invalidLogin: false,\r\n            successLogin: false\r\n        }\r\n\r\n        this.emailInput = React.createRef();\r\n        this.pwdInput = React.createRef();\r\n\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    login() {\r\n\r\n        const { users } = this.props;\r\n        let newActiveUser = null;\r\n        for (let i = 0; i < users.length && !newActiveUser; i++) {\r\n            if (users[i].email === this.emailInput.current.value &&\r\n                users[i].pwd === this.pwdInput.current.value) {\r\n                newActiveUser = users[i];\r\n            }\r\n        }\r\n\r\n        if (newActiveUser) {\r\n            this.props.handleLogin(newActiveUser);\r\n            this.setState({ successLogin: true });\r\n\r\n        } else {\r\n            this.setState({ invalidLogin: true });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.successLogin) {\r\n            return <Redirect to=\"/portfolio\" />\r\n        }\r\n\r\n        return (\r\n            <Jumbotron>\r\n                <Container>\r\n                    <div className=\"login\">\r\n\r\n                        <h1>Login to your Portfolio</h1>\r\n                        <p>or <a href=\"#/signup\">create an account</a></p>\r\n                        <Alert variant=\"danger\" show={this.state.invalidLogin}>\r\n                            Invalid email or password!\r\n                </Alert>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control ref={this.emailInput} type=\"email\" placeholder=\"Enter email \" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control ref={this.pwdInput} type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" type=\"button\" block onClick={this.login}>\r\n                                Login\r\n                    </Button>\r\n                        </Form>\r\n                    </div>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// class LoginPage extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {}\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <Jumbotron>\r\n//                     <Container>\r\n//                         <h1 className=\"display-3\">Login Page</h1>\r\n//                         <p>Login Page</p>\r\n\r\n\r\n//                         <p>\r\n//                             <Button variant=\"primary\" href=\"#/portfolio\">portfolio</Button>\r\n//                         </p>\r\n//                     </Container>\r\n//                 </Jumbotron>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default LoginPage;","import React from 'react'\r\nimport { Jumbotron, Container, Button, Form, Col, Image } from 'react-bootstrap'\r\nimport emailjs from 'emailjs-com';\r\nimport './Communication.css';\r\n\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        var background = { backgroundSize: 'auto' };\r\n        var textStyle1 = {\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            color: 'Black'\r\n\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <h1 className=\"display-3\">SignUp Page</h1>\r\n                        <p>Enter your details and we'll get back to you</p>\r\n                        <div className=\"communicate\">\r\n                            <Image style={background} className=\"img-fluid\"\r\n                                src=\"https://wallpapercave.com/wp/wp2106900.jpg\">\r\n                            </Image>\r\n                            <Form style={textStyle1} action=\"/thankyoupage\">\r\n                                <Form.Row>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" required placeholder=\"email@email.com\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formGridCapital\">\r\n                                        <Form.Label>Phone number</Form.Label>\r\n                                        <Form.Control type=\"number\" placeholder=\"555-444-333\" />\r\n                                    </Form.Group>\r\n\r\n                                </Form.Row>\r\n\r\n\r\n\r\n                                <Form.Group controlId=\"formGridFName\">\r\n                                    <Form.Label>Your First Name</Form.Label>\r\n                                    <Form.Control placeholder=\"Israel\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formGridLName\">\r\n                                    <Form.Label>Your Last Name</Form.Label>\r\n                                    <Form.Control placeholder=\"Israeli\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formGridInvesrtorType\">\r\n                                        <Form.Label>What kind of investor are you ?</Form.Label>\r\n                                        <Form.Control placeholder=\"Example - I hate risk\" />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridCapital\">\r\n                                        <Form.Label>Your initial investment</Form.Label>\r\n                                        <Form.Control type=\"number\" placeholder=\"300,000 $\" />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Group id=\"formGridCheckbox\">\r\n                                    <Form.Check type=\"checkbox\" label=\"I want to get rich !\" />\r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                </Button>\r\n                            </Form>\r\n                        </div>\r\n                        <p>\r\n                            <Button variant=\"primary\" href=\"#/\">Homepage</Button>\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react'\r\nimport { Card, Jumbotron, Container } from 'react-bootstrap'\r\n// import img from '../components/dollar-money-icon.jpg';\r\n\r\n\r\nclass StockCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // currentValue: = this.props.stock.quote * this.props.stock.numberOfStocks\r\n        }\r\n    }\r\n    render() {\r\n        const { stock } = this.props;\r\n        return (\r\n            console.log(\"this is Portfolio Card\"),\r\n            <Jumbotron>\r\n                <Container>\r\n                    <Card style={{ width: '12em', height: '10em' }} className=\"stock\">\r\n                        <Card.Img variant=\"top\" src={stock.img} />\r\n                        {/* <Card.Img variant=\"top\" src={img} /> */}\r\n                        <Card.Body>\r\n                            <Card.Title>{stock.name}</Card.Title>\r\n                            <Card.Text>{stock.desc}</Card.Text>\r\n                            <Card.Text>{stock.quote}$</Card.Text>\r\n                            <Card.Text>\r\n                                Current value: {stock.quote * stock.numberOfStocks}$\r\n                        {/* Current value: {this.state.currentValue}$ */}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default StockCard;","import React from 'react'\r\nimport MainNavbar from '../components/MainNavbar'\r\nimport { Jumbotron, Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport StockCard from '../components/StockCard'\r\nimport { Pie } from 'react-chartjs-2'\r\n\r\n\r\nclass PortFolio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            newStockImg: {\r\n                file: null,\r\n                URL: \"\"\r\n            },\r\n            chartData: {\r\n                labels: [\r\n                    'High',\r\n                    'Medium',\r\n                    'Low'\r\n                ],\r\n                datasets: [{\r\n                    data: this.getChartData(),\r\n                    backgroundColor: [\r\n                        '#FF6384',\r\n                        '#FAFF63',\r\n                        '#36A2EB',\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        '#30302f',\r\n                        '#30302f',\r\n                        '#30302f',\r\n                    ]\r\n                }]\r\n            }\r\n        }\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.createStock = this.createStock.bind(this);\r\n        this.imgChange = this.imgChange.bind(this);\r\n        this.getChartData = this.getChartData.bind(this);\r\n\r\n\r\n        this.nameInput = React.createRef();\r\n        this.descInput = React.createRef();\r\n        this.quoteInput = React.createRef();\r\n        this.numberOfStocksInput = React.createRef();\r\n        this.riskValueInput = React.createRef();\r\n        this.imgInput = React.createRef();\r\n    }\r\n\r\n    getChartData() {\r\n        let high = 0;\r\n        let medium = 0;\r\n        let low = 0;\r\n\r\n        this.props.stocks.forEach(stock => {\r\n            if (stock.riskValue === 1) {\r\n                low++;\r\n            } else if (stock.riskValue === 2) {\r\n                medium++;\r\n            } else {\r\n                high++;\r\n            }\r\n\r\n        });\r\n\r\n        // return [high, low];\r\n        return [high, medium, low];\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // It is important that if you call setStat in componentDidUpdate\r\n        // it must be inside an if statemnet to avoid an infiniate loop\r\n        if (prevProps.stocks != this.props.stocks) {\r\n            // update chart data\r\n            const chartData = {\r\n                labels: [\r\n                    'High',\r\n                    'Medium',\r\n                    'Low'\r\n                ],\r\n                datasets: [{\r\n                    data: this.getChartData(),\r\n                    backgroundColor: [\r\n                        '#FF6384',\r\n                        '#FAFF63',\r\n                        '#36A2EB',\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        '#30302f',\r\n                        '#30302f',\r\n                        '#30302f',\r\n                    ]\r\n                }]\r\n            };\r\n\r\n            this.setState({ chartData });\r\n        }\r\n    }\r\n\r\n    imgChange(ev) {\r\n\r\n        let newStockImg = {};\r\n        newStockImg.file = ev.target.files[0];\r\n        if (newStockImg.file) {\r\n            newStockImg.URL = URL.createObjectURL(newStockImg.file);\r\n        } else {\r\n            newStockImg.URL = \"\";\r\n        }\r\n\r\n        this.setState({ newStockImg });\r\n    }\r\n\r\n\r\n    openModal() {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    createStock() {\r\n        const newStock = {\r\n            name: this.nameInput.current.value,\r\n            desc: this.descInput.current.value,\r\n            quote: this.quoteInput.current.value,\r\n            numberOfStocks: this.numberOfStocksInput.current.value,\r\n            riskValue: parseInt(this.riskValueInput.current.value),\r\n            img: this.state.newStockImg.URL,\r\n\r\n        }\r\n        console.log(\"this.riskValueInput.current.value = \" + this.riskValueInput.current.value)\r\n        // console.log(this.riskValueInput.current.value)\r\n\r\n        this.props.addStock(newStock);\r\n        this.closeModal();\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout, stocks } = this.props;\r\n        const { showModal, newStockImg, chartData } = this.state;\r\n\r\n        //const showModal = this.state.showModal;\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        const stocksCards = stocks.map(stock => <Col key={stock.id} lg=\"3\" md=\"6\"><StockCard stock={stock} /></Col>)\r\n\r\n        return (\r\n            <div>\r\n                <MainNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <div className=\"stocks-header\">\r\n                            <h1>{activeUser.fname}'s Stocks portfolio.</h1>\r\n                            <Button variant=\"primary\" onClick={this.openModal}>New Stock</Button>\r\n                        </div>\r\n                        <Pie data={chartData} />\r\n                        <Row>\r\n                            {stocksCards}\r\n                        </Row>\r\n                        {/* <Row>\r\n                        Total Value: \r\n                    </Row> */}\r\n                        <div>\r\n                            <Modal show={showModal} onHide={this.closeModal} size=\"lg\">\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>New Stock</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form>\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalEmail\" >\r\n                                            <Form.Label column sm={2}>\r\n                                                Name\r\n                                </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Control required ref={this.nameInput} type=\"text\" placeholder=\"Stock name\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                            <Form.Label column sm={2}>\r\n                                                Description\r\n                                </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Control ref={this.descInput} type=\"text\" placeholder=\"Stock description\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                            <Form.Label column sm={2}>\r\n                                                Quote\r\n                                </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Control required ref={this.quoteInput} type=\"number\" placeholder=\"Stock quote\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                            <Form.Label column sm={2}>\r\n                                                Number of Stocks\r\n                                </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Control required ref={this.numberOfStocksInput} type=\"number\" placeholder=\"Number of Stocks\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        {/* <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                <Form.Label column sm={2}>\r\n                                    What is the stock risk 1 = low / 2 = medium / 3 = high\r\n                                </Form.Label>\r\n                                <Col sm={10}>\r\n                                    <Form.Control ref={this.riskValueInput} type=\"text\" placeholder=\"What is the stock risk\" />\r\n                                </Col>\r\n                            </Form.Group> */}\r\n\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                            <Form.Label column sm={2}>\r\n                                                What is this stock risk ?\r\n                                </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Control ref={this.riskValueInput} as=\"select\" type=\"select\" placeholder=\"What is the stock risk\">\r\n\r\n                                                    <option value=\"1\">Low</option>\r\n                                                    <option value=\"2\">Medium</option>\r\n                                                    <option value=\"3\">High</option>\r\n\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                            <Form.Label fontColor=\"blue\" column sm={2}>\r\n                                                Image, this is optional\r\n                                </Form.Label>\r\n                                            <Col sm={6}>\r\n                                                <Form.Control type=\"file\" placeholder=\"Stock image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n                                            </Col>\r\n                                            <Col sm={4}>\r\n                                                <Image src={newStockImg.URL} fluid />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                        Close\r\n                        </Button>\r\n                                    <Button variant=\"primary\" onClick={this.createStock}>\r\n                                        Add a new stock\r\n                        </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </div>\r\n                        {/* <div>\r\n                    <p>\r\n                            <Button variant=\"primary\" href=\"#/\">Homepage</Button>\r\n                        </p>\r\n                        </div> */}\r\n                    </Container>\r\n                </Jumbotron>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortFolio;","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n// import img from '../components/dollar-money-icon.jpg';\r\n\r\n\r\nclass RealEstateCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // currentValue: = this.props.property.quote * this.props.property.numberOfStocks\r\n        }\r\n    }\r\n    render() {\r\n        const { property } = this.props;\r\n        return (\r\n\r\n            console.log(\"this is RealEstate Card\"),\r\n            <Card style={{ width: '12em', height: '10em' }} className=\"property\">\r\n                <Card.Img variant=\"top\" src={property.img} />\r\n                {/* <Card.Img variant=\"top\" src={img} /> */}\r\n                <Card.Body>\r\n                    <Card.Title>{property.name}</Card.Title>\r\n                    <Card.Text>{property.desc}</Card.Text>\r\n                    <Card.Text>{property.quote}$</Card.Text>\r\n                    <Card.Text>\r\n                        {/* Current value: {property.quote * property.numberOfStocks}$ */}\r\n                        {/* Current value: {this.state.currentValue}$ */}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default RealEstateCard;","import React from 'react'\r\nimport MainNavbar from '../components/MainNavbar'\r\nimport { Jumbotron, Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport RealEstateCard from '../components/RealEstateCard'\r\n\r\n\r\nclass RealEstate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            newPropertyImg: {\r\n                file: null,\r\n                URL: \"\"\r\n            }\r\n        }\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.createProperty = this.createProperty.bind(this);\r\n        this.imgChange = this.imgChange.bind(this);\r\n\r\n\r\n        this.nameInput = React.createRef();\r\n        this.descInput = React.createRef();\r\n        this.quoteInput = React.createRef();\r\n        this.numberOfPropertiesInput = React.createRef();\r\n        this.imgInput = React.createRef();\r\n    }\r\n\r\n    imgChange(ev) {\r\n\r\n        let newPropertyImg = {};\r\n        newPropertyImg.file = ev.target.files[0];\r\n        if (newPropertyImg.file) {\r\n            newPropertyImg.URL = URL.createObjectURL(newPropertyImg.file);\r\n        } else {\r\n            newPropertyImg.URL = \"\";\r\n        }\r\n\r\n        this.setState({ newPropertyImg });\r\n    }\r\n\r\n\r\n    openModal() {\r\n        this.setState({ showModal: true })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    createProperty() {\r\n        const newProperty = {\r\n            name: this.nameInput.current.value,\r\n            desc: this.descInput.current.value,\r\n            quote: this.quoteInput.current.value,\r\n            numberOfProperties: this.numberOfPropertiesInput.current.value,\r\n            img: this.state.newPropertyImg.URL,\r\n        }\r\n\r\n        this.props.addProperty(newProperty);\r\n        this.closeModal();\r\n    }\r\n\r\n    render() {\r\n        const { activeUser, handleLogout, properties } = this.props;\r\n        const { showModal, newPropertyImg } = this.state;\r\n        //const showModal = this.state.showModal;\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        const realEstateCards = properties.map(property => <Col key={property.id} lg=\"3\" md=\"6\"><RealEstateCard property={property} /></Col>)\r\n\r\n        return (\r\n            <div>\r\n                <MainNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n                <Jumbotron>\r\n                    <Container>\r\n                        <div className=\"RealEstate-header\">\r\n                            <h1>{activeUser.fname}'s Real Estate.</h1>\r\n                            {/* <Button variant=\"primary\" onClick={this.openModal}>New property</Button> */}\r\n                        </div>\r\n                        <Row>\r\n                            {realEstateCards}\r\n                        </Row>\r\n                    </Container>\r\n\r\n\r\n                    <Modal show={showModal} onHide={this.closeModal} size=\"lg\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>New Property</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Name\r\n                                </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.nameInput} type=\"text\" placeholder=\"Property name\" />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Description\r\n                                </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.descInput} type=\"text\" placeholder=\"Property description\" />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Quote\r\n                                </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.quoteInput} type=\"number\" placeholder=\"Property quote\" />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Number of Real Estates\r\n                                </Form.Label>\r\n                                    <Col sm={10}>\r\n                                        <Form.Control ref={this.numberOfPropertiesInput} type=\"number\" placeholder=\"Number of Real Estate\" />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                                    <Form.Label column sm={2}>\r\n                                        Image\r\n                                </Form.Label>\r\n                                    <Col sm={6}>\r\n                                        <Form.Control type=\"file\" placeholder=\"Property image URL\" accept=\"image/*\" onChange={this.imgChange} />\r\n                                    </Col>\r\n                                    <Col sm={4}>\r\n                                        <Image src={newPropertyImg.URL} fluid />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                Close\r\n                        </Button>\r\n                            <Button variant=\"primary\" onClick={this.createProperty}>\r\n                                Create Property\r\n                        </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    {/* <div>\r\n                    <p>\r\n                            <Button variant=\"primary\" href=\"#/\">Homepage</Button>\r\n                        </p>\r\n                        </div> */}\r\n                </Jumbotron>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RealEstate;","import React from 'react'\r\nimport MainNavbar from '../components/MainNavbar'\r\nimport { Jumbotron, Container, Button, Form, Col, Image } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom';\r\nimport emailjs from 'emailjs-com';\r\nimport './Communication.css';\r\n\r\nclass Communication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  communicate() {\r\n  }\r\n\r\n  render() {\r\n\r\n    const { activeUser, handleLogout } = this.props;\r\n    var background = { backgroundSize: 'auto' };\r\n    var textStyle1 = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      color: 'Black'\r\n    };\r\n\r\n    if (!activeUser) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <MainNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <Jumbotron>\r\n          <Container>\r\n            <h1 className=\"display-3\">Contact us today.</h1>\r\n            <div className=\"communicate\">\r\n              <Image style={background} className=\"img-fluid\"\r\n                src=\"https://wallpapercave.com/wp/wp2106900.jpg\">\r\n              </Image>\r\n              <Form style={textStyle1} action=\"/thankyoupage\">\r\n                <Form.Row>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" required placeholder=\"email@email.com\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridCapital\">\r\n                    <Form.Label>Phone number</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"555-444-333\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridFName\">\r\n                  <Form.Label>Your First Name</Form.Label>\r\n                  <Form.Control placeholder=\"Israel\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formGridLName\">\r\n                  <Form.Label>Your Last Name</Form.Label>\r\n                  <Form.Control placeholder=\"Israeli\" />\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridCapital\">\r\n                    <Form.Label>What do you need ?</Form.Label>\r\n                    <Form.Control placeholder=\"Make changes in my portfolio\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group id=\"formGridCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Call me now !\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n\r\n          </Container>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Communication;\r\n","import React from 'react'\r\nimport MainNavbar from '../components/MainNavbar'\r\nimport { Jumbotron, Container, Button, Image } from 'react-bootstrap'\r\nimport emailjs from 'emailjs-com';\r\nimport './Communication.css';\r\n\r\n\r\nclass ThankYouPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n    var background = { backgroundSize: 'auto' };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <MainNavbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <Jumbotron>\r\n          <Container>\r\n            <h1 className=\"display-3\">Thank you for contacting Us.</h1>\r\n\r\n            <div>\r\n              <Image style={background} className=\"img-fluid\"\r\n                src=\"https://wallpapercave.com/wp/wp2106900.jpg\">\r\n              </Image>\r\n            </div>\r\n            <p>\r\n              <Button variant=\"primary\" href=\"#/\">Homepage</Button>\r\n            </p>\r\n          </Container>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThankYouPage;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport SignUp from './pages/SignUp'\nimport PortFolio from './pages/PortFolio';\nimport RealEstate from './pages/RealEstate';\nimport Communication from './pages/Communication';\nimport ThankYouPage from './pages/ThankYouPage';\nimport jsonUsers from './data/users'\nimport jsonStocks from './data/stocks'\nimport jsonProperties from './data/properties';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeUser: null,\n      allUsers: jsonUsers,\n      allStocks: jsonStocks,\n      allProperties: jsonProperties,\n      activeUserStocks: []\n      // hack for starting with my stocks\n      // activeUserStocks: jsonStocks.filter(stock => stock.userId === 1)\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.addStock = this.addStock.bind(this);\n    this.addProperty = this.addProperty.bind(this);\n\n    console.log(this.state.allStocks);\n    console.log(this.state.allProperties);\n  }\n\n  handleLogout() {\n    this.setState({ activeUser: null });\n  }\n\n  handleLogin(activeUser) {\n\n    const activeUserStocks = this.state.allStocks.filter(stock => stock.userId === activeUser.id)\n\n    this.setState({ activeUser, activeUserStocks });\n  }\n\n  addStock(newStock) {\n    //const {activeUser, allStocks, activeUserStocks} this.state.activeUser\n    // 1) add id and user to the stock\n    newStock.userId = this.state.activeUser.id;\n    newStock.id = this.state.allStocks[this.state.allStocks.length - 1].id + 1;\n\n    // for the sake of the chart example adding a hard coded riskValue (easy)\n    // newStock.riskValue = 1;\n\n\n    // 2) update all stocks and active user stocks\n    const allStocks = this.state.allStocks.concat(newStock);\n    const activeUserStocks = this.state.activeUserStocks.concat(newStock);\n\n    this.setState({ allStocks, activeUserStocks });\n  }\n\n  addProperty(newProperty) {\n    //const {activeUser, allStocks, activeUserStocks} this.state.activeUser\n    // 1) add id and user to the stock\n    newProperty.userId = this.state.activeUser.id;\n    newProperty.id = this.state.allProperties[this.state.allProperties.length - 1].id + 1;\n\n    // // for the sake of the chart example adding a hard coded riskValue (easy)\n    // newProperty.riskValue = 1;\n\n\n    // 2) update all stocks and active user stocks\n    const allProperties = this.state.allProperties.concat(newProperty);\n    const activeUserStocks = this.state.activeUserStocks.concat(newProperty);\n\n    this.setState({ allProperties, activeUserStocks });\n  }\n\n  render() {\n\n    const { activeUser, allUsers, activeUserStocks } = this.state;\n    // const activeUser = this.state.activeUser;\n\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage activeUser={activeUser} handleLogout={this.handleLogout} />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage users={allUsers} handleLogin={this.handleLogin} />\n        </Route>\n        <Route path=\"/Signup\">\n          <SignUp users={allUsers} handleLogin={this.handleLogin} />\n        </Route>\n        <Route path=\"/portfolio\">\n          <PortFolio stocks={activeUserStocks} activeUser={activeUser} handleLogout={this.handleLogout} addStock={this.addStock} />\n        </Route>\n        <Route path=\"/realestate\">\n          <RealEstate properties={activeUserStocks} activeUser={activeUser} handleLogout={this.handleLogout} addProperty={this.addProperty} />\n        </Route>\n        <Route path=\"/communication\">\n          <Communication stocks={activeUserStocks} activeUser={activeUser} handleLogout={this.handleLogout} addStock={this.addStock} />\n        </Route>\n        <Route path=\"/thankyoupage\">\n          <ThankYouPage stocks={activeUserStocks} activeUser={activeUser} handleLogout={this.handleLogout} addStock={this.addStock} />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport emailjs from 'emailjs-com';\n\n// Initializing emailjs\nemailjs.init(\"user_ZrEN8xAKMxrQh507rTgzk\");\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}